name: CMake Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest, macos-latest]
        build_type: [Release]
        c_compiler: [gcc, clang]
        include:
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++
            
          - os: macos-latest
            c_compiler: gcc
            cpp_compiler: g++
            
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++

    steps:
      # Install the latest homebrew on both macOS and Linux,
      - name: Install Homebrew
        run: |
          echo $SHELL
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          brew update

      # Install dependencies: cmake, ninja, gcc, clang (llvm), libgcrypt, openssl, readline, and libsodium
      - name: Install Dependencies
        run: |
          brew install cmake ninja gcc llvm libgcrypt openssl@3 readline libsodium
          echo 'export PATH="/usr/local/opt/llvm/bin:$PATH"' >> ~/.zshrc
          echo 'export LDFLAGS="-L/usr/local/opt/llvm/lib/c++ -Wl,-rpath,/usr/local/opt/llvm/lib/c++"' >> ~/.zshrc
      
      - name: Build BLAKE3
        run: |
          git clone https://github.com/BLAKE3-team/BLAKE3.git
          cd BLAKE3/c
          cmake -B build -G Ninja
          sudo cmake --build build --config Release --target install



      - uses: actions/checkout@v3

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Configure CMake
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S ${{ github.workspace }}

      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

      - name: Test
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        # Execute tests defined by the CMake configuration. Note that --build-config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
        run: ctest --build-config ${{ matrix.build_type }}
